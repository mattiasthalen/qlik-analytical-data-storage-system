Trace
---------------------------------------------------------------
    Defining frame__adventure_works__product_models
---------------------------------------------------------------
;
Trace Setting variables...;
Let val__source_path = 'lib://DataFiles/Analytical Data Storage System/QVD/$(val__environment)/data_according_to_system/raw__adventure_works__product_models.qvd';
Let val__target_path = '$(val__qvd_path__dab)/frame__adventure_works__product_models.qvd';
Let val__source_create_time = Timestamp(FileTime('$(val__source_path)'), 'YYYY-MM-DD hh:mm:ss.fff');
Let val__target_create_time = Timestamp(FileTime('$(val__target_path)'), 'YYYY-MM-DD hh:mm:ss.fff');
Let val__source_is_newer = If('$(val__source_create_time)' > '$(val__target_create_time)', 1, 0);

Set var__hook__reference__product_model = 'reference__product_model__adventure_works|' & Text([product_model_id]);
Set var__record_version = Window(RecNo(), [product_model_id], 'Asc', [record_loaded_at]);

Set var__valid_from = If(
        $(var__record_version) = 1,
        Timestamp#('1970-01-01 00:00:00.000', 'YYYY-MM-DD hh:mm:ss.fff'),
        [record_loaded_at]
    )
;

Set var__valid_to = Coalesce(
        Window([record_loaded_at], [product_model_id], 'Asc', [record_loaded_at], 1, 1, 1),
        Timestamp#('9999-12-31 23:59:59.999', 'YYYY-MM-DD hh:mm:ss.fff')
    )
;

Set var__is_current_record = If(
        $(var__valid_to) = Timestamp#('9999-12-31 23:59:59.999', 'YYYY-MM-DD hh:mm:ss.fff'),
        1,
        0
    )
;

Set var__record_updated_at = If(
        $(var__is_current_record),
        [record_loaded_at],
        $(var__valid_to)
    )
;

Set var__pit_hook__reference__product_model = $(var__hook__reference__product_model) & '~epoch__valid_from|' & Text($(var__valid_from));

If $(val__source_is_newer) = 1 Then 

    Trace Source is newer, loading & transforming data...;
    [frame__adventure_works__product_models]:
    Load
        Text($(var__pit_hook__reference__product_model)) As [_pit_hook__reference__product_model],
        Text($(var__hook__reference__product_model)) As [_hook__reference__product_model],
        Num#([product_model_id]) As [product_model__product_model_id],
        Text([name]) As [product_model__name],
        Text([rowguid]) As [product_model__rowguid],
        Date(Num#([modified_date]), 'YYYY-MM-DD') As [product_model__modified_date],
        Text([catalog_description]) As [product_model__catalog_description],
        Text([instructions]) As [product_model__instructions],
        Text([record_hash]) As [product_model__record_hash],
        Timestamp([record_loaded_at], 'YYYY-MM-DD hh:mm:ss.fff') As [product_model__record_loaded_at],
        Timestamp($(var__record_updated_at), 'YYYY-MM-DD hh:mm:ss.fff') As [product_model__record_updated_at],
        Num($(var__record_version)) As [product_model__record_version],
        Timestamp($(var__valid_from), 'YYYY-MM-DD hh:mm:ss.fff') As [product_model__record_valid_from],
        Timestamp($(var__valid_to), 'YYYY-MM-DD hh:mm:ss.fff') As [product_model__record_valid_to],
        Num($(var__is_current_record)) As [product_model__is_current_record]

    From
        [lib://DataFiles/Analytical Data Storage System/QVD/$(val__environment)/data_according_to_system/raw__adventure_works__product_models.qvd] (qvd)
    ;

    Trace Commenting table...;
    Comment Table [frame__adventure_works__product_models] With 'Product model classification.';

    Trace Commenting fields...;
    Comment Field [_pit_hook__reference__product_model] With 'Point in time version of _hook__reference__product_model.';
    Comment Field [_hook__reference__product_model] With 'Hook for product_model_id using keyset: reference__product_model__adventure_works.';
    Comment Field [product_model__product_model_id] With 'Primary key for ProductModel records.';
    Comment Field [product_model__name] With 'Product model description.';
    Comment Field [product_model__rowguid] With 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.';
    Comment Field [product_model__modified_date] With 'Date and time the record was last updated.';
    Comment Field [product_model__catalog_description] With 'Detailed product catalog information in xml format.';
    Comment Field [product_model__instructions] With 'Manufacturing instructions in xml format.';
    Comment Field [product_model__record_hash] With 'Hash of the record.';
    Comment Field [product_model__record_loaded_at] With 'Date and time the record was loaded.';
    Comment Field [product_model__record_updated_at] With 'Date and time the record was last updated.';
    Comment Field [product_model__record_version] With 'Version of the record.';
    Comment Field [product_model__record_valid_from] With 'Date and time the record was valid from.';
    Comment Field [product_model__record_valid_to] With 'Date and time the record was valid to.';
    Comment Field [product_model__is_current_record] With '1 if the record is current, 0 otherwise.';

    Trace Storing data...;
    Store [frame__adventure_works__product_models] Into [$(val__qvd_path__dab)/frame__adventure_works__product_models.qvd] (qvd);

    Trace Dropping table...;
    Drop Table [frame__adventure_works__product_models];

Else
    Trace Source is older than target, skipping...;

End If

Trace Resetting variables...;
Let val__source_path = Null();
Let val__target_path = Null();
Let val__source_create_time = Null();
Let val__target_create_time = Null();
Let val__source_is_newer = Null();

Let var__record_version = Null();
Let var__valid_from = Null();
Let var__valid_to = Null();
Let var__is_current_record = Null();
Let var__record_updated_at = Null();
Let var__hook__reference__product_model = Null();
Let var__pit_hook__reference__product_model = Null();

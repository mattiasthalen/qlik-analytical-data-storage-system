Trace
---------------------------------------------------------------
    Defining frame__adventure_works__products
---------------------------------------------------------------
;
Trace Setting variables...;
Let val__source_path = 'lib://DataFiles/Analytical Data Storage System/QVD/$(val__environment)/data_according_to_system/raw__adventure_works__products.qvd';
Let val__target_path = '$(val__qvd_path__dab)/frame__adventure_works__products.qvd';
Let val__source_create_time = Timestamp(FileTime('$(val__source_path)'), 'YYYY-MM-DD hh:mm:ss.fff');
Let val__target_create_time = Timestamp(FileTime('$(val__target_path)'), 'YYYY-MM-DD hh:mm:ss.fff');
Let val__source_is_newer = If('$(val__source_create_time)' > '$(val__target_create_time)', 1, 0);

Set var__hook__product = 'product__adventure_works|' & Text([product_id]);
Set var__hook__product_subcategory = 'product_subcategory__adventure_works|' & Text([product_subcategory_id]);
Set var__hook__reference__product_model = 'reference__product_model__adventure_works|' & Text([product_model_id]);
Set var__record_version = Window(RecNo(), [product_id], 'Asc', [record_loaded_at]);

Set var__valid_from = If(
        $(var__record_version) = 1,
        Timestamp#('1970-01-01 00:00:00.000', 'YYYY-MM-DD hh:mm:ss.fff'),
        [record_loaded_at]
    )
;

Set var__valid_to = Coalesce(
        Window([record_loaded_at], [product_id], 'Asc', [record_loaded_at], 1, 1, 1),
        Timestamp#('9999-12-31 23:59:59.999', 'YYYY-MM-DD hh:mm:ss.fff')
    )
;

Set var__is_current_record = If(
        $(var__valid_to) = Timestamp#('9999-12-31 23:59:59.999', 'YYYY-MM-DD hh:mm:ss.fff'),
        1,
        0
    )
;

Set var__record_updated_at = If(
        $(var__is_current_record),
        [record_loaded_at],
        $(var__valid_to)
    )
;

Set var__pit_hook__product = $(var__hook__product) & '~epoch__valid_from|' & Text($(var__valid_from));

If $(val__source_is_newer) = 1 Then 

    Trace Source is newer, loading & transforming data...;
    [frame__adventure_works__products]:
    Load
        Text($(var__pit_hook__product)) As [_pit_hook__product],
        Text($(var__hook__product)) As [_hook__product],
        Text($(var__hook__product_subcategory)) As [_hook__product_subcategory],
        Text($(var__hook__reference__product_model)) As [_hook__reference__product_model],
        Num#([product_id]) As [product__product_id],
        Text([name]) As [product__name],
        Text([product_number]) As [product__product_number],
        Text([make_flag]) As [product__make_flag],
        Text([finished_goods_flag]) As [product__finished_goods_flag],
        Num#([safety_stock_level]) As [product__safety_stock_level],
        Num#([reorder_point]) As [product__reorder_point],
        Num#([standard_cost]) As [product__standard_cost],
        Num#([list_price]) As [product__list_price],
        Num#([days_to_manufacture]) As [product__days_to_manufacture],
        Date(Num#([sell_start_date]), 'YYYY-MM-DD') As [product__sell_start_date],
        Text([rowguid]) As [product__rowguid],
        Date(Num#([modified_date]), 'YYYY-MM-DD') As [product__modified_date],
        Text([color]) As [product__color],
        Text([class]) As [product__class],
        Text([weight_unit_measure_code]) As [product__weight_unit_measure_code],
        Num#([weight]) As [product__weight],
        Text([size]) As [product__size],
        Text([size_unit_measure_code]) As [product__size_unit_measure_code],
        Text([product_line]) As [product__product_line],
        Text([style]) As [product__style],
        Num#([product_subcategory_id]) As [product__product_subcategory_id],
        Num#([product_model_id]) As [product__product_model_id],
        Date(Num#([sell_end_date]), 'YYYY-MM-DD') As [product__sell_end_date],
        Text([record_hash]) As [product__record_hash],
        Timestamp([record_loaded_at], 'YYYY-MM-DD hh:mm:ss.fff') As [product__record_loaded_at],
        Timestamp($(var__record_updated_at), 'YYYY-MM-DD hh:mm:ss.fff') As [product__record_updated_at],
        Num($(var__record_version)) As [product__record_version],
        Timestamp($(var__valid_from), 'YYYY-MM-DD hh:mm:ss.fff') As [product__record_valid_from],
        Timestamp($(var__valid_to), 'YYYY-MM-DD hh:mm:ss.fff') As [product__record_valid_to],
        Num($(var__is_current_record)) As [product__is_current_record]

    From
        [lib://DataFiles/Analytical Data Storage System/QVD/$(val__environment)/data_according_to_system/raw__adventure_works__products.qvd] (qvd)
    ;

    Trace Commenting table...;
    Comment Table [frame__adventure_works__products] With 'Products sold or used in the manufacturing of sold products.';

    Trace Commenting fields...;
    Comment Field [_pit_hook__product] With 'Point in time version of _hook__product.';
    Comment Field [_hook__product] With 'Hook for product_id using keyset: product__adventure_works.';
    Comment Field [_hook__product_subcategory] With 'Hook for product_subcategory_id using keyset: product_subcategory__adventure_works.';
    Comment Field [_hook__reference__product_model] With 'Hook for product_model_id using keyset: reference__product_model__adventure_works.';
    Comment Field [product__product_id] With 'Primary key for Product records.';
    Comment Field [product__name] With 'Name of the product.';
    Comment Field [product__product_number] With 'Unique product identification number.';
    Comment Field [product__make_flag] With '0 = Product is purchased, 1 = Product is manufactured in-house.';
    Comment Field [product__finished_goods_flag] With '0 = Product is not a salable item. 1 = Product is salable.';
    Comment Field [product__safety_stock_level] With 'Minimum inventory quantity.';
    Comment Field [product__reorder_point] With 'Inventory level that triggers a purchase order or work order.';
    Comment Field [product__standard_cost] With 'Standard cost of the product.';
    Comment Field [product__list_price] With 'Selling price.';
    Comment Field [product__days_to_manufacture] With 'Number of days required to manufacture the product.';
    Comment Field [product__sell_start_date] With 'Date the product was available for sale.';
    Comment Field [product__rowguid] With 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.';
    Comment Field [product__modified_date] With 'Date and time the record was last updated.';
    Comment Field [product__color] With 'Product color.';
    Comment Field [product__class] With 'H = High, M = Medium, L = Low.';
    Comment Field [product__weight_unit_measure_code] With 'Unit of measure for Weight column.';
    Comment Field [product__weight] With 'Product weight.';
    Comment Field [product__size] With 'Product size.';
    Comment Field [product__size_unit_measure_code] With 'Unit of measure for Size column.';
    Comment Field [product__product_line] With 'R = Road, M = Mountain, T = Touring, S = Standard.';
    Comment Field [product__style] With 'W = Womens, M = Mens, U = Universal.';
    Comment Field [product__product_subcategory_id] With 'Product is a member of this product subcategory. Foreign key to ProductSubCategory.ProductSubCategoryID.';
    Comment Field [product__product_model_id] With 'Product is a member of this product model. Foreign key to ProductModel.ProductModelID.';
    Comment Field [product__sell_end_date] With 'Date the product was no longer available for sale.';
    Comment Field [product__record_hash] With 'Hash of the record.';
    Comment Field [product__record_loaded_at] With 'Date and time the record was loaded.';
    Comment Field [product__record_updated_at] With 'Date and time the record was last updated.';
    Comment Field [product__record_version] With 'Version of the record.';
    Comment Field [product__record_valid_from] With 'Date and time the record was valid from.';
    Comment Field [product__record_valid_to] With 'Date and time the record was valid to.';
    Comment Field [product__is_current_record] With '1 if the record is current, 0 otherwise.';

    Trace Storing data...;
    Store [frame__adventure_works__products] Into [$(val__qvd_path__dab)/frame__adventure_works__products.qvd] (qvd);

    Trace Dropping table...;
    Drop Table [frame__adventure_works__products];

Else
    Trace Source is older than target, skipping...;

End If

Trace Resetting variables...;
Let val__source_path = Null();
Let val__target_path = Null();
Let val__source_create_time = Null();
Let val__target_create_time = Null();
Let val__source_is_newer = Null();

Let var__record_version = Null();
Let var__valid_from = Null();
Let var__valid_to = Null();
Let var__is_current_record = Null();
Let var__record_updated_at = Null();
Let var__hook__product = Null();
Let var__hook__product_subcategory = Null();
Let var__hook__reference__product_model = Null();
Let var__pit_hook__product = Null();

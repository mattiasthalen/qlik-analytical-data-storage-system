Trace
---------------------------------------------------------------
    Defining frame__adventure_works__sales_order_details
---------------------------------------------------------------
;
Trace Setting variables...;
Let val__source_path = 'lib://DataFiles/Analytical Data Storage System/QVD/$(val__environment)/data_according_to_system/raw__adventure_works__sales_order_details.qvd';
Let val__target_path = '$(val__qvd_path__dab)/frame__adventure_works__sales_order_details.qvd';
Let val__source_create_time = Timestamp(FileTime('$(val__source_path)'), 'YYYY-MM-DD hh:mm:ss.fff');
Let val__target_create_time = Timestamp(FileTime('$(val__target_path)'), 'YYYY-MM-DD hh:mm:ss.fff');
Let val__source_is_newer = If('$(val__source_create_time)' > '$(val__target_create_time)', 1, 0);

Set var__hook__order_line__sales = 'order_line__sales__adventure_works|' & Text([sales_order_detail_id]);
Set var__hook__order__sales = 'order__sales__adventure_works|' & Text([sales_order_id]);
Set var__hook__product = 'product__adventure_works|' & Text([product_id]);
Set var__hook__reference__special_offer = 'reference__special_offer__adventure_works|' & Text([special_offer_id]);
Set var__record_version = Window(RecNo(), [sales_order_detail_id], 'Asc', [record_loaded_at]);

Set var__valid_from = If(
        $(var__record_version) = 1,
        Timestamp#('1970-01-01 00:00:00.000', 'YYYY-MM-DD hh:mm:ss.fff'),
        [record_loaded_at]
    )
;

Set var__valid_to = Coalesce(
        Window([record_loaded_at], [sales_order_detail_id], 'Asc', [record_loaded_at], 1, 1, 1),
        Timestamp#('9999-12-31 23:59:59.999', 'YYYY-MM-DD hh:mm:ss.fff')
    )
;

Set var__is_current_record = If(
        $(var__valid_to) = Timestamp#('9999-12-31 23:59:59.999', 'YYYY-MM-DD hh:mm:ss.fff'),
        1,
        0
    )
;

Set var__record_updated_at = If(
        $(var__is_current_record),
        [record_loaded_at],
        $(var__valid_to)
    )
;

Set var__pit_hook__order_line__sales = $(var__hook__order_line__sales) & '~epoch__valid_from|' & Text($(var__valid_from));

If $(val__source_is_newer) = 1 Then 

    Trace Source is newer, loading & transforming data...;
    [frame__adventure_works__sales_order_details]:
    Load
        Text($(var__pit_hook__order_line__sales)) As [_pit_hook__order_line__sales],
        Text($(var__hook__order_line__sales)) As [_hook__order_line__sales],
        Text($(var__hook__order__sales)) As [_hook__order__sales],
        Text($(var__hook__product)) As [_hook__product],
        Text($(var__hook__reference__special_offer)) As [_hook__reference__special_offer],
        Num#([sales_order_id]) As [sales_order_detail__sales_order_id],
        Num#([sales_order_detail_id]) As [sales_order_detail__sales_order_detail_id],
        Text([carrier_tracking_number]) As [sales_order_detail__carrier_tracking_number],
        Num#([order_qty]) As [sales_order_detail__order_qty],
        Num#([product_id]) As [sales_order_detail__product_id],
        Num#([special_offer_id]) As [sales_order_detail__special_offer_id],
        Num#([unit_price]) As [sales_order_detail__unit_price],
        Num#([unit_price_discount]) As [sales_order_detail__unit_price_discount],
        Num#([line_total]) As [sales_order_detail__line_total],
        Text([rowguid]) As [sales_order_detail__rowguid],
        Date(Num#([modified_date]), 'YYYY-MM-DD') As [sales_order_detail__modified_date],
        Text([record_hash]) As [sales_order_detail__record_hash],
        Timestamp([record_loaded_at], 'YYYY-MM-DD hh:mm:ss.fff') As [sales_order_detail__record_loaded_at],
        Timestamp($(var__record_updated_at), 'YYYY-MM-DD hh:mm:ss.fff') As [sales_order_detail__record_updated_at],
        Num($(var__record_version)) As [sales_order_detail__record_version],
        Timestamp($(var__valid_from), 'YYYY-MM-DD hh:mm:ss.fff') As [sales_order_detail__record_valid_from],
        Timestamp($(var__valid_to), 'YYYY-MM-DD hh:mm:ss.fff') As [sales_order_detail__record_valid_to],
        Num($(var__is_current_record)) As [sales_order_detail__is_current_record]

    From
        [lib://DataFiles/Analytical Data Storage System/QVD/$(val__environment)/data_according_to_system/raw__adventure_works__sales_order_details.qvd] (qvd)
    ;

    Trace Commenting table...;
    Comment Table [frame__adventure_works__sales_order_details] With 'Individual products associated with a specific sales order. See SalesOrderHeader.';

    Trace Commenting fields...;
    Comment Field [_pit_hook__order_line__sales] With 'Point in time version of _hook__order_line__sales.';
    Comment Field [_hook__order_line__sales] With 'Hook for sales_order_detail_id using keyset: order_line__sales__adventure_works.';
    Comment Field [_hook__order__sales] With 'Hook for sales_order_id using keyset: order__sales__adventure_works.';
    Comment Field [_hook__product] With 'Hook for product_id using keyset: product__adventure_works.';
    Comment Field [_hook__reference__special_offer] With 'Hook for special_offer_id using keyset: reference__special_offer__adventure_works.';
    Comment Field [sales_order_detail__sales_order_id] With 'Primary key. Foreign key to SalesOrderHeader.SalesOrderID.';
    Comment Field [sales_order_detail__sales_order_detail_id] With 'Primary key. One incremental unique number per product sold.';
    Comment Field [sales_order_detail__carrier_tracking_number] With 'Shipment tracking number supplied by the shipper.';
    Comment Field [sales_order_detail__order_qty] With 'Quantity ordered per product.';
    Comment Field [sales_order_detail__product_id] With 'Product sold to customer. Foreign key to Product.ProductID.';
    Comment Field [sales_order_detail__special_offer_id] With 'Promotional code. Foreign key to SpecialOffer.SpecialOfferID.';
    Comment Field [sales_order_detail__unit_price] With 'Selling price of a single product.';
    Comment Field [sales_order_detail__unit_price_discount] With 'Discount amount.';
    Comment Field [sales_order_detail__line_total] With 'Per product subtotal. Computed as UnitPrice * (1 - UnitPriceDiscount) * OrderQty.';
    Comment Field [sales_order_detail__rowguid] With 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.';
    Comment Field [sales_order_detail__modified_date] With 'Date and time the record was last updated.';
    Comment Field [sales_order_detail__record_hash] With 'Hash of the record.';
    Comment Field [sales_order_detail__record_loaded_at] With 'Date and time the record was loaded.';
    Comment Field [sales_order_detail__record_updated_at] With 'Date and time the record was last updated.';
    Comment Field [sales_order_detail__record_version] With 'Version of the record.';
    Comment Field [sales_order_detail__record_valid_from] With 'Date and time the record was valid from.';
    Comment Field [sales_order_detail__record_valid_to] With 'Date and time the record was valid to.';
    Comment Field [sales_order_detail__is_current_record] With '1 if the record is current, 0 otherwise.';

    Trace Storing data...;
    Store [frame__adventure_works__sales_order_details] Into [$(val__qvd_path__dab)/frame__adventure_works__sales_order_details.qvd] (qvd);

    Trace Dropping table...;
    Drop Table [frame__adventure_works__sales_order_details];

Else
    Trace Source is older than target, skipping...;

End If

Trace Resetting variables...;
Let val__source_path = Null();
Let val__target_path = Null();
Let val__source_create_time = Null();
Let val__target_create_time = Null();
Let val__source_is_newer = Null();

Let var__record_version = Null();
Let var__valid_from = Null();
Let var__valid_to = Null();
Let var__is_current_record = Null();
Let var__record_updated_at = Null();
Let var__hook__order_line__sales = Null();
Let var__hook__order__sales = Null();
Let var__hook__product = Null();
Let var__hook__reference__special_offer = Null();
Let var__pit_hook__order_line__sales = Null();

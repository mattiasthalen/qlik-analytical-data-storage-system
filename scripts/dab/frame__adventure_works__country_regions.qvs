Trace
---------------------------------------------------------------
    Defining frame__adventure_works__country_regions
---------------------------------------------------------------
;
Trace Setting variables...;
Let val__source_path = 'lib://DataFiles/Analytical Data Storage System/QVD/$(val__environment)/data_according_to_system/raw__adventure_works__country_regions.qvd';
Let val__target_path = '$(val__qvd_path__dab)/frame__adventure_works__country_regions.qvd';
Let val__source_create_time = Timestamp(FileTime('$(val__source_path)'), 'YYYY-MM-DD hh:mm:ss.fff');
Let val__target_create_time = Timestamp(FileTime('$(val__target_path)'), 'YYYY-MM-DD hh:mm:ss.fff');
Let val__source_is_newer = If('$(val__source_create_time)' > '$(val__target_create_time)', 1, 0);

Set var__hook__reference__country_region = 'reference__country_region__adventure_works|' & Text([country_region_code]);
Set var__record_version = Window(RecNo(), [country_region_code], 'Asc', [record_loaded_at]);

Set var__valid_from = If(
        $(var__record_version) = 1,
        Timestamp#('1970-01-01 00:00:00.000', 'YYYY-MM-DD hh:mm:ss.fff'),
        [record_loaded_at]
    )
;

Set var__valid_to = Coalesce(
        Window([record_loaded_at], [country_region_code], 'Asc', [record_loaded_at], 1, 1, 1),
        Timestamp#('9999-12-31 23:59:59.999', 'YYYY-MM-DD hh:mm:ss.fff')
    )
;

Set var__is_current_record = If(
        $(var__valid_to) = Timestamp#('9999-12-31 23:59:59.999', 'YYYY-MM-DD hh:mm:ss.fff'),
        1,
        0
    )
;

Set var__record_updated_at = If(
        $(var__is_current_record),
        [record_loaded_at],
        $(var__valid_to)
    )
;

Set var__pit_hook__reference__country_region = $(var__hook__reference__country_region) & '~epoch__valid_from|' & Text($(var__valid_from));

If $(val__source_is_newer) = 1 Then 

    Trace Source is newer, loading & transforming data...;
    [frame__adventure_works__country_regions]:
    Load
        Text($(var__pit_hook__reference__country_region)) As [_pit_hook__reference__country_region],
        Text($(var__hook__reference__country_region)) As [_hook__reference__country_region],
        Text([country_region_code]) As [country_region__country_region_code],
        Text([name]) As [country_region__name],
        Date(Num#([modified_date]), 'YYYY-MM-DD') As [country_region__modified_date],
        Text([record_hash]) As [country_region__record_hash],
        Timestamp([record_loaded_at], 'YYYY-MM-DD hh:mm:ss.fff') As [country_region__record_loaded_at],
        Timestamp($(var__record_updated_at), 'YYYY-MM-DD hh:mm:ss.fff') As [country_region__record_updated_at],
        Num($(var__record_version)) As [country_region__record_version],
        Timestamp($(var__valid_from), 'YYYY-MM-DD hh:mm:ss.fff') As [country_region__record_valid_from],
        Timestamp($(var__valid_to), 'YYYY-MM-DD hh:mm:ss.fff') As [country_region__record_valid_to],
        Num($(var__is_current_record)) As [country_region__is_current_record]

    From
        [lib://DataFiles/Analytical Data Storage System/QVD/$(val__environment)/data_according_to_system/raw__adventure_works__country_regions.qvd] (qvd)
    ;

    Trace Commenting table...;
    Comment Table [frame__adventure_works__country_regions] With 'Lookup table containing the ISO standard codes for countries and regions.';

    Trace Commenting fields...;
    Comment Field [_pit_hook__reference__country_region] With 'Point in time version of _hook__reference__country_region.';
    Comment Field [_hook__reference__country_region] With 'Hook for country_region_code using keyset: reference__country_region__adventure_works.';
    Comment Field [country_region__country_region_code] With 'ISO standard code for countries and regions.';
    Comment Field [country_region__name] With 'Country or region name.';
    Comment Field [country_region__modified_date] With 'Date and time the record was last updated.';
    Comment Field [country_region__record_hash] With 'Hash of the record.';
    Comment Field [country_region__record_loaded_at] With 'Date and time the record was loaded.';
    Comment Field [country_region__record_updated_at] With 'Date and time the record was last updated.';
    Comment Field [country_region__record_version] With 'Version of the record.';
    Comment Field [country_region__record_valid_from] With 'Date and time the record was valid from.';
    Comment Field [country_region__record_valid_to] With 'Date and time the record was valid to.';
    Comment Field [country_region__is_current_record] With '1 if the record is current, 0 otherwise.';

    Trace Storing data...;
    Store [frame__adventure_works__country_regions] Into [$(val__qvd_path__dab)/frame__adventure_works__country_regions.qvd] (qvd);

    Trace Dropping table...;
    Drop Table [frame__adventure_works__country_regions];

Else
    Trace Source is older than target, skipping...;

End If

Trace Resetting variables...;
Let val__source_path = Null();
Let val__target_path = Null();
Let val__source_create_time = Null();
Let val__target_create_time = Null();
Let val__source_is_newer = Null();

Let var__record_version = Null();
Let var__valid_from = Null();
Let var__valid_to = Null();
Let var__is_current_record = Null();
Let var__record_updated_at = Null();
Let var__hook__reference__country_region = Null();
Let var__pit_hook__reference__country_region = Null();

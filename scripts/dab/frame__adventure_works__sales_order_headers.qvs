Trace
---------------------------------------------------------------
    Defining frame__adventure_works__sales_order_headers
---------------------------------------------------------------
;
Trace Setting variables...;
Let val__source_path = 'lib://DataFiles/Analytical Data Storage System/QVD/$(val__environment)/data_according_to_system/raw__adventure_works__sales_order_headers.qvd';
Let val__target_path = '$(val__qvd_path__dab)/frame__adventure_works__sales_order_headers.qvd';
Let val__source_create_time = Timestamp(FileTime('$(val__source_path)'), 'YYYY-MM-DD hh:mm:ss.fff');
Let val__target_create_time = Timestamp(FileTime('$(val__target_path)'), 'YYYY-MM-DD hh:mm:ss.fff');
Let val__source_is_newer = If('$(val__source_create_time)' > '$(val__target_create_time)', 1, 0);

Set var__hook__order__sales = 'order__sales__adventure_works|' & Text([sales_order_id]);
Set var__hook__customer = 'customer__adventure_works|' & Text([customer_id]);
Set var__hook__person__sales = 'person__sales__adventure_works|' & Text([sales_person_id]);
Set var__hook__territory__sales = 'territory__sales__adventure_works|' & Text([territory_id]);
Set var__hook__address__billing = 'address__adventure_works|' & Text([bill_to_address_id]);
Set var__hook__address__shipping = 'address__adventure_works|' & Text([ship_to_address_id]);
Set var__hook__ship_method = 'ship_method__adventure_works|' & Text([ship_method_id]);
Set var__hook__credit_card = 'credit_card__adventure_works|' & Text([credit_card_id]);
Set var__hook__currency = 'currency__adventure_works|' & Text([currency_rate_id]);
Set var__record_version = Window(RecNo(), [sales_order_id], 'Asc', [record_loaded_at]);

Set var__valid_from = If(
        $(var__record_version) = 1,
        Timestamp#('1970-01-01 00:00:00.000', 'YYYY-MM-DD hh:mm:ss.fff'),
        [record_loaded_at]
    )
;

Set var__valid_to = Coalesce(
        Window([record_loaded_at], [sales_order_id], 'Asc', [record_loaded_at], 1, 1, 1),
        Timestamp#('9999-12-31 23:59:59.999', 'YYYY-MM-DD hh:mm:ss.fff')
    )
;

Set var__is_current_record = If(
        $(var__valid_to) = Timestamp#('9999-12-31 23:59:59.999', 'YYYY-MM-DD hh:mm:ss.fff'),
        1,
        0
    )
;

Set var__record_updated_at = If(
        $(var__is_current_record),
        [record_loaded_at],
        $(var__valid_to)
    )
;

Set var__pit_hook__order__sales = $(var__hook__order__sales) & '~epoch__valid_from|' & Text($(var__valid_from));

If $(val__source_is_newer) = 1 Then 

    Trace Source is newer, loading & transforming data...;
    [frame__adventure_works__sales_order_headers]:
    Load
        Text($(var__pit_hook__order__sales)) As [_pit_hook__order__sales],
        Text($(var__hook__order__sales)) As [_hook__order__sales],
        Text($(var__hook__customer)) As [_hook__customer],
        Text($(var__hook__person__sales)) As [_hook__person__sales],
        Text($(var__hook__territory__sales)) As [_hook__territory__sales],
        Text($(var__hook__address__billing)) As [_hook__address__billing],
        Text($(var__hook__address__shipping)) As [_hook__address__shipping],
        Text($(var__hook__ship_method)) As [_hook__ship_method],
        Text($(var__hook__credit_card)) As [_hook__credit_card],
        Text($(var__hook__currency)) As [_hook__currency],
        Num#([sales_order_id]) As [sales_order_header__sales_order_id],
        Num#([revision_number]) As [sales_order_header__revision_number],
        Date(Num#([order_date]), 'YYYY-MM-DD') As [sales_order_header__order_date],
        Date(Num#([due_date]), 'YYYY-MM-DD') As [sales_order_header__due_date],
        Date(Num#([ship_date]), 'YYYY-MM-DD') As [sales_order_header__ship_date],
        Num#([status]) As [sales_order_header__status],
        Text([online_order_flag]) As [sales_order_header__online_order_flag],
        Text([sales_order_number]) As [sales_order_header__sales_order_number],
        Text([purchase_order_number]) As [sales_order_header__purchase_order_number],
        Text([account_number]) As [sales_order_header__account_number],
        Num#([customer_id]) As [sales_order_header__customer_id],
        Num#([sales_person_id]) As [sales_order_header__sales_person_id],
        Num#([territory_id]) As [sales_order_header__territory_id],
        Num#([bill_to_address_id]) As [sales_order_header__bill_to_address_id],
        Num#([ship_to_address_id]) As [sales_order_header__ship_to_address_id],
        Num#([ship_method_id]) As [sales_order_header__ship_method_id],
        Num#([credit_card_id]) As [sales_order_header__credit_card_id],
        Text([credit_card_approval_code]) As [sales_order_header__credit_card_approval_code],
        Num#([sub_total]) As [sales_order_header__sub_total],
        Num#([tax_amt]) As [sales_order_header__tax_amt],
        Num#([freight]) As [sales_order_header__freight],
        Num#([total_due]) As [sales_order_header__total_due],
        Text([rowguid]) As [sales_order_header__rowguid],
        Date(Num#([modified_date]), 'YYYY-MM-DD') As [sales_order_header__modified_date],
        Num#([currency_rate_id]) As [sales_order_header__currency_rate_id],
        Text([record_hash]) As [sales_order_header__record_hash],
        Timestamp([record_loaded_at], 'YYYY-MM-DD hh:mm:ss.fff') As [sales_order_header__record_loaded_at],
        Timestamp($(var__record_updated_at), 'YYYY-MM-DD hh:mm:ss.fff') As [sales_order_header__record_updated_at],
        Num($(var__record_version)) As [sales_order_header__record_version],
        Timestamp($(var__valid_from), 'YYYY-MM-DD hh:mm:ss.fff') As [sales_order_header__record_valid_from],
        Timestamp($(var__valid_to), 'YYYY-MM-DD hh:mm:ss.fff') As [sales_order_header__record_valid_to],
        Num($(var__is_current_record)) As [sales_order_header__is_current_record]

    From
        [lib://DataFiles/Analytical Data Storage System/QVD/$(val__environment)/data_according_to_system/raw__adventure_works__sales_order_headers.qvd] (qvd)
    ;

    Trace Commenting table...;
    Comment Table [frame__adventure_works__sales_order_headers] With 'General sales order information.';

    Trace Commenting fields...;
    Comment Field [_pit_hook__order__sales] With 'Point in time version of _hook__order__sales.';
    Comment Field [_hook__order__sales] With 'Hook for sales_order_id using keyset: order__sales__adventure_works.';
    Comment Field [_hook__customer] With 'Hook for customer_id using keyset: customer__adventure_works.';
    Comment Field [_hook__person__sales] With 'Hook for sales_person_id using keyset: person__sales__adventure_works.';
    Comment Field [_hook__territory__sales] With 'Hook for territory_id using keyset: territory__sales__adventure_works.';
    Comment Field [_hook__address__billing] With 'Hook for bill_to_address_id using keyset: address__adventure_works.';
    Comment Field [_hook__address__shipping] With 'Hook for ship_to_address_id using keyset: address__adventure_works.';
    Comment Field [_hook__ship_method] With 'Hook for ship_method_id using keyset: ship_method__adventure_works.';
    Comment Field [_hook__credit_card] With 'Hook for credit_card_id using keyset: credit_card__adventure_works.';
    Comment Field [_hook__currency] With 'Hook for currency_rate_id using keyset: currency__adventure_works.';
    Comment Field [sales_order_header__sales_order_id] With 'Primary key.';
    Comment Field [sales_order_header__revision_number] With 'Incremental number to track changes to the sales order over time.';
    Comment Field [sales_order_header__order_date] With 'Dates the sales order was created.';
    Comment Field [sales_order_header__due_date] With 'Date the order is due to the customer.';
    Comment Field [sales_order_header__ship_date] With 'Date the order was shipped to the customer.';
    Comment Field [sales_order_header__status] With 'Order current status. 1 = In process; 2 = Approved; 3 = Backordered; 4 = Rejected; 5 = Shipped; 6 = Cancelled.';
    Comment Field [sales_order_header__online_order_flag] With '0 = Order placed by sales person. 1 = Order placed online by customer.';
    Comment Field [sales_order_header__sales_order_number] With 'Unique sales order identification number.';
    Comment Field [sales_order_header__purchase_order_number] With 'Customer purchase order number reference.';
    Comment Field [sales_order_header__account_number] With 'Financial accounting number reference.';
    Comment Field [sales_order_header__customer_id] With 'Customer identification number. Foreign key to Customer.BusinessEntityID.';
    Comment Field [sales_order_header__sales_person_id] With 'Sales person who created the sales order. Foreign key to SalesPerson.BusinessEntityID.';
    Comment Field [sales_order_header__territory_id] With 'Territory in which the sale was made. Foreign key to SalesTerritory.SalesTerritoryID.';
    Comment Field [sales_order_header__bill_to_address_id] With 'Customer billing address. Foreign key to Address.AddressID.';
    Comment Field [sales_order_header__ship_to_address_id] With 'Customer shipping address. Foreign key to Address.AddressID.';
    Comment Field [sales_order_header__ship_method_id] With 'Shipping method. Foreign key to ShipMethod.ShipMethodID.';
    Comment Field [sales_order_header__credit_card_id] With 'Credit card identification number. Foreign key to CreditCard.CreditCardID.';
    Comment Field [sales_order_header__credit_card_approval_code] With 'Approval code provided by the credit card company.';
    Comment Field [sales_order_header__sub_total] With 'Sales subtotal. Computed as SUM(SalesOrderDetail.LineTotal) for the appropriate SalesOrderID.';
    Comment Field [sales_order_header__tax_amt] With 'Tax amount.';
    Comment Field [sales_order_header__freight] With 'Shipping cost.';
    Comment Field [sales_order_header__total_due] With 'Total due from customer. Computed as Subtotal + TaxAmt + Freight.';
    Comment Field [sales_order_header__rowguid] With 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.';
    Comment Field [sales_order_header__modified_date] With 'Date and time the record was last updated.';
    Comment Field [sales_order_header__currency_rate_id] With 'Currency exchange rate used. Foreign key to CurrencyRate.CurrencyRateID.';
    Comment Field [sales_order_header__record_hash] With 'Hash of the record.';
    Comment Field [sales_order_header__record_loaded_at] With 'Date and time the record was loaded.';
    Comment Field [sales_order_header__record_updated_at] With 'Date and time the record was last updated.';
    Comment Field [sales_order_header__record_version] With 'Version of the record.';
    Comment Field [sales_order_header__record_valid_from] With 'Date and time the record was valid from.';
    Comment Field [sales_order_header__record_valid_to] With 'Date and time the record was valid to.';
    Comment Field [sales_order_header__is_current_record] With '1 if the record is current, 0 otherwise.';

    Trace Storing data...;
    Store [frame__adventure_works__sales_order_headers] Into [$(val__qvd_path__dab)/frame__adventure_works__sales_order_headers.qvd] (qvd);

    Trace Dropping table...;
    Drop Table [frame__adventure_works__sales_order_headers];

Else
    Trace Source is older than target, skipping...;

End If

Trace Resetting variables...;
Let val__source_path = Null();
Let val__target_path = Null();
Let val__source_create_time = Null();
Let val__target_create_time = Null();
Let val__source_is_newer = Null();

Let var__record_version = Null();
Let var__valid_from = Null();
Let var__valid_to = Null();
Let var__is_current_record = Null();
Let var__record_updated_at = Null();
Let var__hook__order__sales = Null();
Let var__hook__customer = Null();
Let var__hook__person__sales = Null();
Let var__hook__territory__sales = Null();
Let var__hook__address__billing = Null();
Let var__hook__address__shipping = Null();
Let var__hook__ship_method = Null();
Let var__hook__credit_card = Null();
Let var__hook__currency = Null();
Let var__pit_hook__order__sales = Null();
